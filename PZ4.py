#Задание1
#Напишите лямбда-функцию, которая принимает число и возвращает его куб. Проверьте её работу на числах 2, 3 и 4.
cube = lambda x: x * x * x
cubeNum = int(input("Введите число: "))
print(f"Число в кубе {cube(cubeNum)}")

#Задание2
#Дан список чисел: [1, 2, 3, 4, 5]. Используя map, создайте новый список, в котором каждое число умножено на 10.
nums = [1, 2, 3, 4, 5]
new_nums = map(lambda x : x*10, nums)
print(f"Числа умноженные на 10: {list(new_nums)}")

#Задание3
#Дан список чисел: [10, 15, 20, 25, 30]. Используя filter, создайте новый список, в котором останутся только числа, большие 20
nums = [10, 15, 20, 25, 30]
new_nums = filter(lambda x : x > 20, nums)
print(f"Числа больше 20: {list(new_nums)}")

#Задание4
#Напишите лямбда-функцию, которая принимает строку и возвращает её длину. Проверьте её работу на строках "hello" и "python".
stroka = lambda x: len(x)
st = input("Введите строку: ")
print(f"Длина строки: {stroka(st)}")

#Задание5
#Дан список строк: ["cat", "dog", "elephant"]. Используя map и lambda, создайте новый список, в котором каждая строка будет преобразована в её длину.
st = ["cat", "dog", "elephant"]
stroka = map(lambda x: len(x), st)
print(f"Длина каждого слова: {list(stroka)}")

#Задание6
#Дан список чисел: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Используя filter и lambda, создайте новый список, в котором останутся только числа, кратные 5
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
ktarFive = filter(lambda x: x%5 == 0, nums)
print(f"Числа кратные 5: {list(ktarFive)}")

#Задание7
#Дан список строк: ["apple", "banana", "cherry", "date"]. Используя map и lambda, создайте новый список, в котором каждая строка будет преобразована в верхний регистр
st = ["apple", "banana", "cherry", "date"]
stroka = map(lambda x: x.upper(), st)
print(f"Строки в верхнем регистре: {list(stroka)}")

#Задание8
#Дан список чисел: [12, 15, 18, 20, 24, 30]. Используя map и filter, создайте новый список, в котором каждое число, делящееся на 6, будет увеличено на 5.
nums = [12, 15, 18, 20, 24, 30]
new_nums = map(lambda x: x + 5, filter(lambda x: x % 6 == 0, nums))
print(f"Числа кратные 6, увеличенные на 5: {list(new_nums)}")

#Задание9
#Напишите функцию, которая принимает два числа и возвращает их произведение. Используя map, примените эту функцию к двум спискам: [1, 2, 3] и [4, 5, 6]. Результат должен быть [4, 10, 18].
nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
new_nums2 = map(lambda x,y : x * y , nums1, nums2)
print(f"Числа списков умноженные друг на друга: {list(new_nums2)}")

#Задание10
#Дан список строк: ["apple", "banana", "cherry", "date", "elderberry"]. Используя filter и lambda, создайте новый список, в котором останутся только строки, длина которых больше 5.
slova = ["apple", "banana", "cherry", "date", "elderberry"]
new_slova = filter(lambda x: len(x) > 5, slova)
print(f"слова с длинной больше 5: {list(new_slova)}")

#Задание11
#Дан список чисел: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Используя map, filter и lambda, создайте новый список, в котором каждое нечётное число будет увеличено на 10, а чётное — оставлено без изменений.
nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
new_nums = map(lambda x: x + 10 if x % 2 != 0 else x, nums)
print(f"Числа кратные 6, увеличенные на 5: {list(new_nums)}")